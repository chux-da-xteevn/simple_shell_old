#ifndef SHELL_H
<<<<<<< HEAD
# define SHELL_H
# include <limits.h>
# include <stddef.h>
# include <stdio.h>
# include <stdlib.h>
# include <string.h>
# include <sys/wait.h>
# include <unistd.h>
extern char	**environ;

void		startMyshell(void);
ssize_t		readUserInput(char **args, size_t *size_args);
void		writeError(char *input);
void		writeExitError(char *nomber);
void		freeArgs(char **args);
void		executeCommands(char **args, char **envp, int *stat);
int			findFullPath(char *prompt, char **full_path);
void		waitChildprocess(int *stat);
char		*_getenv(const char *path);
void		printEnviron(void);
int			main(void);
void		nonInteractMode(char *token, int *status);
char		**funcTokenize(char *str, char *delim);
void		setEnvironmentVariable(char *variable,  char *value);

void		unsetEnvironmentVariable(char *variable);

void		funcExitStatus(int stat, char **args, char **token, int *status);

void		handleCdCommand(char **args, int *stat, char **previousDir,
				char *cwd);
void		getPromptFail(char *prompt);

char		*_strdup(const char *src);
int _strlen(const char *str);
int			_strcmp(char *s1, char *s2);
int			_atoi(char *s);
#endif
=======
#define SHELL_H

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <sys/stat.h>
#include <signal.h>

/* GLOBAL VAR: double pointer that holds environment variables */
extern char **environ;

/* FILE: _PUTCHAR.C */
int _putchar(char c);

/* FILE: STRING_HELPER1.C */
int _strlen(char *s);
int _strcmp(char *str1, char *str2);
char *_strncpy(char *dest, char *src, int n);
void fork_fail(void);

/* FILE: STRING_HELPER2.C */
unsigned int _conststrlen(const char *str);
char *_conststrncpy(char *dest, const char *src, int n);
char *_strncpyappend(char *dest, char *src, char *cmd, int d_len, int c_len);

/* FILE: MAIN.C */
void handler(int signum);
int main(int argc, char **argv, char **env);

/* FILE: STRINGTOK.C */
unsigned int cmd_length(char *str);
char **stringtokarray(char *str);

/* FILE: HANDLEPATH.C */
char **env_pathlist(char *cmd1, char **envar);
void hsh_errormsg(char **argv, char *cmd1, int number);

/* FILE: IGNORE.C */
unsigned int total_dir(char *path);
char *_getenv(const char *name, char **environ);

/* FILE: FREE.C */
void free_doubleptr(char **ptr);
void exitfree(char *buffer, char **cmds);
void envfree(char *buffer, char **cmds, char **environ);
void eof_constant(char *buffer);
void cmds_is_null(char *buffer);

/* FILE: ENVIRON.C */
void printallenv(char **envar);
void absPath(char **cmds, char *buffer, char **envar, char **argv, int number);


#endif /* SHELL_H */
>>>>>>> 37ccfeea329b9674b276612250d119ab26906413
